
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BooksReader", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BooksReader {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     */
    @WebMethod(operationName = "AddBook")
    @RequestWrapper(localName = "AddBook", targetNamespace = "http://service/", className = "service.AddBook")
    @ResponseWrapper(localName = "AddBookResponse", targetNamespace = "http://service/", className = "service.AddBookResponse")
    @Action(input = "http://service/BooksReader/AddBookRequest", output = "http://service/BooksReader/AddBookResponse")
    public void addBook(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4);

    /**
     * 
     * @return
     *     returns java.util.List<service.BookItem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readBooks", targetNamespace = "http://service/", className = "service.ReadBooks")
    @ResponseWrapper(localName = "readBooksResponse", targetNamespace = "http://service/", className = "service.ReadBooksResponse")
    @Action(input = "http://service/BooksReader/readBooksRequest", output = "http://service/BooksReader/readBooksResponse")
    public List<BookItem> readBooks();

    /**
     * 
     * @param arg0
     * @return
     *     returns service.BookItem
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBookById", targetNamespace = "http://service/", className = "service.GetBookById")
    @ResponseWrapper(localName = "getBookByIdResponse", targetNamespace = "http://service/", className = "service.GetBookByIdResponse")
    @Action(input = "http://service/BooksReader/getBookByIdRequest", output = "http://service/BooksReader/getBookByIdResponse")
    public BookItem getBookById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<service.BookItem>
     */
    @WebMethod(operationName = "GetDispoBook")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetDispoBook", targetNamespace = "http://service/", className = "service.GetDispoBook")
    @ResponseWrapper(localName = "GetDispoBookResponse", targetNamespace = "http://service/", className = "service.GetDispoBookResponse")
    @Action(input = "http://service/BooksReader/GetDispoBookRequest", output = "http://service/BooksReader/GetDispoBookResponse")
    public List<BookItem> getDispoBook();

    /**
     * 
     * @return
     *     returns java.util.List<service.Relation>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRelation", targetNamespace = "http://service/", className = "service.GetRelation")
    @ResponseWrapper(localName = "getRelationResponse", targetNamespace = "http://service/", className = "service.GetRelationResponse")
    @Action(input = "http://service/BooksReader/getRelationRequest", output = "http://service/BooksReader/getRelationResponse")
    public List<Relation> getRelation();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addAuteur", targetNamespace = "http://service/", className = "service.AddAuteur")
    @ResponseWrapper(localName = "addAuteurResponse", targetNamespace = "http://service/", className = "service.AddAuteurResponse")
    @Action(input = "http://service/BooksReader/addAuteurRequest", output = "http://service/BooksReader/addAuteurResponse")
    public void addAuteur(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<service.Auteur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAuteur", targetNamespace = "http://service/", className = "service.GetAuteur")
    @ResponseWrapper(localName = "getAuteurResponse", targetNamespace = "http://service/", className = "service.GetAuteurResponse")
    @Action(input = "http://service/BooksReader/getAuteurRequest", output = "http://service/BooksReader/getAuteurResponse")
    public List<Auteur> getAuteur();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addRelation", targetNamespace = "http://service/", className = "service.AddRelation")
    @ResponseWrapper(localName = "addRelationResponse", targetNamespace = "http://service/", className = "service.AddRelationResponse")
    @Action(input = "http://service/BooksReader/addRelationRequest", output = "http://service/BooksReader/addRelationResponse")
    public void addRelation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteBook", targetNamespace = "http://service/", className = "service.DeleteBook")
    @ResponseWrapper(localName = "deleteBookResponse", targetNamespace = "http://service/", className = "service.DeleteBookResponse")
    @Action(input = "http://service/BooksReader/deleteBookRequest", output = "http://service/BooksReader/deleteBookResponse")
    public void deleteBook(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
